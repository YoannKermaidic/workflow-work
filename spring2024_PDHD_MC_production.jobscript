#!/bin/bash
#
source /cvmfs/dune.opensciencegrid.org/products/dune/setup_dune.sh
setup metacat
export METACAT_SERVER_URL=https://metacat.fnal.gov:9443/dune_meta_prod/app
export METACAT_AUTH_SERVER_URL=https://metacat.fnal.gov:8143/auth/dune

#Setup recent lar software suite
setup dunesw \
   "${DUNE_VERSION:-v09_83_01d00}" \
   -q "${DUNE_QUALIFIER:-e26:prof}"
echo "printing env"


if [ -z ${JUSTIN_PROCESSORS} ]; then
  JUSTIN_PROCESSORS=1
fi

echo "Justin processors: ${JUSTIN_PROCESSORS}"

export TF_NUM_THREADS=${JUSTIN_PROCESSORS}   
export OPENBLAS_NUM_THREADS=${JUSTIN_PROCESSORS} 
export JULIA_NUM_THREADS=${JUSTIN_PROCESSORS} 
export MKL_NUM_THREADS=${JUSTIN_PROCESSORS} 
export NUMEXPR_NUM_THREADS=${JUSTIN_PROCESSORS} 
export OMP_NUM_THREADS=${JUSTIN_PROCESSORS}  

env

echo "Will use justin-get-file"
DID_PFN_RSE=`$JUSTIN_PATH/justin-get-file`
if [ "${DID_PFN_RSE}" == "" ] ; then
  echo "Could not get file"
  exit 0
fi
pfn=`echo ${DID_PFN_RSE} | cut -f2 -d' '`

if [ -z ${LINENUMBER} ] ; then
  LINENUMBER=$pfn
fi

# Get the file number and iteration within the file that we want to use
line=`sed -n "${LINENUMBER}p" ${INPUT_DIR}/all_h4_prod_nums.txt`
echo "using ${LINENUMBER} from input file"
echo ${line}
split=($line)
iter=${split[1]}
filenum=${split[0]}
echo "File: ${filenum}"
echo "Iter: ${iter}"

sed ${INPUT_DIR}/pdhd_prod.fcl -e "s/_1.root/_${filenum}.root/" > prod.fcl
sed -i prod.fcl -e "s/StartEvent: 0/StartEvent: ${iter}/"

# Run Generator
now=$(date -u +"%Y%m%dT%H%M%SZ")
prodname="prod_beam_p1GeV_cosmics_protodunehd_${now}"
lar -c prod.fcl \
    -o ${prodname}.root \
    -n ${NEVENTS:-1}



# Make metadata
overrides="dune_mc.h4_input_file=H4_v34b_1GeV_-27.7_10M_${filenum}.root"
overrides="${overrides} dune_mc.h4_input_iteration=${iter}"
python ${INPUT_DIR}/pdhd_meta_writer.py \
       --json ${INPUT_DIR}/pdhd_base_meta.json \
       --overrides ${overrides} \
       -o ${prodname}.root.json

# Stage 1 G4
g4stage1_name="${prodname}_g4_stage1"
lar -c standard_g4_protodunehd_stage1.fcl \
    ${prodname}.root \
    -o ${g4stage1_name}.root

# Stage 2 G4 -- No SCE
g4stage2_name="${g4stage1_name}_g4_stage2_sce_off"
lar -c  standard_g4_protodunehd_stage2.fcl \
    ${g4stage1_name}.root \
    -o ${g4stage2_name}.root

# Detsim
detsim_name="${g4stage2_name}_detsim"
lar -c standard_detsim_protodunehd.fcl \
    ${g4stage2_name}.root \
    -o ${detsim_name}.root 

# Reco
reco_name="${detsim_name}_reco"
lar -c standard_reco_protodunehd.fcl \
    ${detsim_name}.root \
    -o ${reco_name}.root

#overrides=""
python ${INPUT_DIR}/pdhd_meta_writer.py \
       --json ${INPUT_DIR}/pdhd_base_meta.json \
       --overrides ${overrides} \
       --parent ${prodname}.root \
       -o ${reco_name}.root.json


if [ $? -ne 0 ]
then
  echo "Exiting with error"
  exit 1
else
  echo "$pfn" > justin-processed-pfns.txt
fi
